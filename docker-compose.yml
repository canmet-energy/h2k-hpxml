# Docker Compose configuration for H2K-HPXML development and testing
# This file provides convenient ways to run the h2k-hpxml tools with volume mounts

version: '3.8'

services:
  # Main h2k-hpxml service
  h2k-hpxml:
    build:
      context: .
      dockerfile: Dockerfile
    image: canmet/h2k-hpxml:latest
    container_name: h2k-hpxml
    volumes:
      # Mount current directory as data volume
      - .:/data
      # Preserve configuration between runs
      - h2k-config:/data/.h2k-config
    environment:
      # Enable debug logging for development
      - H2K_LOG_LEVEL=DEBUG
    working_dir: /data
    # Override entrypoint for interactive development
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    command: ["bash"]
    stdin_open: true
    tty: true

  # Service for batch processing multiple files
  batch-convert:
    build:
      context: .
      dockerfile: Dockerfile
    image: canmet/h2k-hpxml:latest
    volumes:
      - ./input:/input:ro     # Read-only input directory
      - ./output:/output      # Output directory
      - h2k-config:/data/.h2k-config
    environment:
      - H2K_LOG_LEVEL=INFO
    working_dir: /data
    profiles:
      - batch  # Use 'docker-compose --profile batch up' to run this service

  # Service for resilience analysis
  resilience:
    build:
      context: .
      dockerfile: Dockerfile
    image: canmet/h2k-hpxml:latest
    volumes:
      - ./input:/input:ro
      - ./output:/output
      - h2k-config:/data/.h2k-config
    environment:
      - H2K_LOG_LEVEL=INFO
    working_dir: /data
    profiles:
      - resilience

volumes:
  # Named volume to persist configuration
  h2k-config:
    driver: local

# Usage Examples:
#
# 1. Interactive development shell:
#    docker-compose run --rm h2k-hpxml
#
# 2. Convert single file:
#    docker-compose run --rm h2k-hpxml h2k2hpxml /data/examples/WizardHouse.h2k
#
# 3. Batch processing (create input/ and output/ directories first):
#    docker-compose --profile batch run --rm batch-convert \
#      bash -c 'for file in /input/*.h2k; do h2k2hpxml "$file" --output "/output/$(basename "$file" .h2k).xml"; done'
#
# 4. Resilience analysis:
#    docker-compose --profile resilience run --rm resilience \
#      h2k-resilience /input/house.h2k --scenarios "outage_typical_year"
#
# 5. Check dependencies:
#    docker-compose run --rm h2k-hpxml h2k-deps --check-only
#
# 6. Build image locally:
#    docker-compose build
#
# 7. Clean up:
#    docker-compose down
#    docker volume rm h2k-hpxml_h2k-config  # Remove config volume if needed